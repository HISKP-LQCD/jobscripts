***************
* Description *
***************

This is a jobscript and input file generation script for combined inversions
and contractions using tmLQCD 'invert' and cvc (using libcvcpp). Currently
this is limited to machines of BG/Q type.

The script is designed to create one job script per gauge configuration for all 
steps relating to the computation of meson two-point functions. The resulting
job script is a multi-step job which runs all the inversions in parallel (independently)
and where the contraction step is dependent on all inversion steps.

A common usage scenario would be the "Osterwalder-Seiler" analysis of light, strange
and charmed mesons on a given gauge background.

When run, the script completes and concatenates the various *.template files into the
job script and input files. It also creates links to propagator sources and gauge
configurations and creates the job working directories.


***********
* RUNNING *
***********

To start the jobscript generation process, run it like this:

  $ ./make_combo_scripts.sh masses.txt 

The generator supports a mode for creating job scripts for the contraction only
(assuming that all the directory structures from the inversions are already
in place).

  $ ./make_combo_scripts.sh masses.txt 1

( see CONTRACTIONS_ONLY in make_combo_scripts.sh )

*****************
* CONFIGURATION *
*****************

To adjust it to a specific purpose the following steps need to be carried out:

common.header.template
  adjust notification e-mail address and possibly add other LOADLEVELER parameters
  such as "account_no" on Fermi@CINECA

common.job.template
  if BG_SIZE other than 1024,512,256,128 or 64 is to be used, add some mappings
  for this purpose

inversion.job.template
  If necessary, adjust NPN, OMP_NUM_THREADS and NPN, possibly also NP for special
  geometries.
  Adjust EXEC to point to the tmLQCD 'invert' application.

invert.XXXX.input.template
  The OS, ND and DISC input templates refer to inversions for Osterwalder-Seiler, 
  Non-Degenerate and disconnected sources respectively. It is important to remember
  that in order to do inversions with the clover term, one has to use the "[ND]CLOVER"
  operator. Adjust these as necessary, paying attention to setting kappa correctly.
  nr[x,y,z]procs, 2kappamu, solverprecision and propagatorprecision are adjusted
  during jobscript generation by 'make_combo_scripts.sh',
  Note that anything edited by 'make_combo_scripts.sh' needs to be written without
  a space separating the name of the parameter and the equal sign. (e.g.: "2kappamu="
  instead of "2kappamu =")

masses.txt
  This file defines how many steps the resulting job scripts will have. It also sets a
  number of parameters which will be adjusted in the input file of the inverter.
  Each line of this file contains a name, a bare mass (2kappamu), bg_size, a wallclock limit
  a solver precision, a storage precision for the resulting propagators (32 or 64) and
  finally a subdirectory in which the propagators will be stored.
  Names of the form nd_* are for inversions involving non-degenerate doublets. The mass
  for these must be given as 2kappamusigma;2kappamudelta (note the lack of spaces and the semicolon!).
  Names of the form disc_* are for inversions for disconnected contributions using
  volume sources (so far only degenerate supported).
  See make_combo_scripts.sh for a more complete understanding of what these
  parameters change.

archival.job.template
  After all inversions have been completed a serial job is launched which sends
  the propagators off to an archival location. This file needs some manual work
  in matching the directory names in the contraction working directory (i.e. names
  like light/light_00, strange/strange_01 etc..) to more meaningful names
  like light_0,0009, strange_0.0238, strange_0.0245. One needs to modify the two
  bash arrays "FROM_DIRS" and "TO_DIRS" accordingly. 

contraction.job.template
  If necessary, adjust NPN (which is the number of processes per node used by CVC)
  Adjust EXEC to point to the libcvcpp meson two-point executable!

cvc.input.template
  Adjust the parameters for CVC as appropriate for your analysis, 
  refer to the libcvcpp-specific documentation for the format and meaing. 
  Unlike for the inverter input file above, you must specify the masses here by hand!
  (generally one would supply "amu").
  Note that make_scripts.sh replaces _NS by the configuration number and _TS
  by the source timeslice.

make_combo_scripts.sh
  START: startig configuration
  END: last configuration
  STEP: step between configurations
  the various directories
  CONTRACTIONS_BG_SIZE (bg_size for the contraction step)
  CONTRACTIONS_WC_LIMIT (wallclock time limit for the contraction step)
