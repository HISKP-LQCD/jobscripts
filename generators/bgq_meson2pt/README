***************
* Description *
***************

This is a jobscript and input file generation script for combined inversions
and contractions using tmLQCD 'invert' and cvc (using libcvcpp). Currently
this is limited to machines of BG/Q type.

The script is designed to create one job script per X gauge configurations for all 
steps relating to the computation of meson two-point functions. The resulting
job script is a multi-step job which runs all the inversions in parallel (independently)
and where the contraction and archival steps are dependent on all inversion steps.
The archival step involves the archival of the propagators ONLY!

A common usage scenario would be the "Osterwalder-Seiler" analysis of light, strange
and charmed mesons on a given gauge background. Another would be the computation
of heavy doublet correlators using multiple mudelta and musigma paramters and
possibily multiple light valence masses.

When run, the script completes and concatenates the various *.template files into the
job script and input files. It also creates links to propagator sources and gauge
configurations and creates the job working directories.


***********
* RUNNING *
***********

To start the jobscript generation process, run it like this:

  $ ./make_combo_scripts.sh masses.txt 

For cases where one of the steps in a job script was unable to complete because
of failures or because it ran into the wallclock limit, the job script
generator can be configured to produce only inversion, only contraction
or only archival jobs (or any combination thereof). Of course, when doing
contractions or archivals, all the propagators should already be in place!

*****************
* CONFIGURATION *
*****************

The configuration of the jobscript generator is not quite as streamlined as it
should be but and requires some attention to detail. To adjust it to a specific 
purpose the following steps need to be carried out:

common.header.template
  adjust notification e-mail address and possibly add other LOADLEVELER parameters
  such as "account_no" on Fermi@CINECA

common.job.template
  If BG_SIZE other than 1024,512,256,128,64 or 32 is to be used, add some mappings
  for this purpose. On Fermi it may be necessary to disable the mapping
  altogether.

inversion.job.template
  If necessary, adjust OMP_NUM_THREADS and NPN, possibly also NP for special
  geometries.
  Adjust EXEC to point to the tmLQCD 'invert' application.

invert.XXXX.input.template
  The OS, ND and DISC input templates refer to inversions for Osterwalder-Seiler, 
  Non-Degenerate and disconnected sources respectively. It is important to remember
  that in order to do inversions with the clover term, one has to use the "[ND]CLOVER"
  operator. Adjust these as necessary, paying attention to setting kappa correctly.
  nr[x,y,z]procs, 2kappamu, solverprecision and propagatorprecision are adjusted
  during jobscript generation by 'make_combo_scripts.sh',
  (!!!) Note that anything edited by 'make_combo_scripts.sh' needs to be written without
  a space separating the name of the parameter and the equal sign. (e.g.: "2kappamu="
  instead of "2kappamu =")

masses.txt
  This file defines how many steps the resulting job scripts will have. It also sets a
  number of parameters which will be adjusted in the input files of the inverter.
  Each line of this file contains a name, a bare mass (2kappamu), bg_size, a wallclock limit
  a solver precision, a storage precision for the resulting propagators (32 or 64) and
  finally a subdirectory in which the propagators will be stored.
  Names of the form nd_* are for inversions involving non-degenerate doublets. The mass
  for these must be given as 2kappamusigma;2kappamudelta (note the lack of spaces and the semicolon!).
  Names of the form disc_* are for inversions for disconnected contributions using
  volume sources (so far only degenerate supported).
  See make_combo_scripts.sh for a more complete understanding of what these
  parameters change. See masses.txt for a complete example for all types.

archival.job.template
  After all inversions have been completed a serial job is launched which sends
  the propagators off to an archival location. This file needs some manual work
  in matching the directory names in the contraction working directory (i.e. names
  like light/light_00, strange/strange_01 etc..) to more meaningful names
  like light_0,0009, strange_0.0238, strange_0.0245. One needs to modify the two
  bash arrays "FROM_DIRS" and "TO_DIRS" accordingly. 

contraction.job.template
  If necessary, adjust NPN (which is the number of processes per node used by CVC)
  Adjust EXEC to point to the libcvcpp meson two-point executable! (which is currently still
  called "test_libcvcpp"...) 

cvc.input.template
  Adjust the parameters for CVC as appropriate for your analysis, 
  refer to the libcvcpp-specific documentation for the format and meaning. 
  Unlike for the inverter input file above, you must specify the masses here by hand!
  (generally one would supply "amu"). The mass values entered here are only used
  to name the output directories and have no actual impact on the contraction
  (unless the same mass is specified twice, in which case some overwiting might occur)
  Note that make_scripts.sh replaces _NS by the configuration number and _TS
  by the source timeslice.

make_combo_scripts.sh
  the various directories
  START: startig configuration
  END: last configuration
  STEP: step between configurations
  CONFS_PER_BUNCH: how many configurations should be done in one job
                   the most convenient setup is one configuration per job, but when the maximum number
                   of jobs in the queue is severely limited, it might make sense to do more configurations
                   per job. The danger is that if a job fails for some reason, it becomes more 
                   difficult to recover because one can be forced to generate a new job script just for one
                   configuration etc..
  DEBUG: whether additional output should be shown which can help in debugging problems in the script
  DO_ARCHIVAL: whether the archival part of the job should be generated
  DO_INVERSION: whether inersions should be performed
  DO_CONTRACTION: whether the contraction step should be performed
  CONTRACTIONS_BG_SIZE: (bg_size for the contraction step)
  CONTRACTIONS_WC_LIMIT: (wallclock time limit for the contraction step)
  ARCHIVAL_WC_LIMIT: wallclock limit for the serial archival step (on JuQueen: maximum is 45 minutes!)
  

***********
* EXAMPLE *
***********

An example of a generated job script can be found in EXAMPLE.jcf. During generation,
the header is accumulated directly into the jobscript while the body is accumulated
in "job.body.tmp" and then concatenated with the header.

In general, the structure of a generated script looks like this, for example 
for inversions and contractions of three flavours with 3 2 and 4 masses each
(with templates edited by the generator as necessary and then pasted together):

################################################################

###########
common.header.template
##########
inversion.header.template
#########
inversion.header.template
#########
... (5 more inversion headers)
########
inversion.header.template
########
archival.header.template
########
contraction.header.template
########

common.job.template

case $LOADL_STEP_NAME in

flavour1 )

inversion.job.template

inversion.job.template

inversion.job.template

;;

flavour2 )

inversion.job.template

inversion.job.template

;;

flavour3 )

inversion.job.template

inversion.job.template

inversion.job.template

inversion.job.template

;;

archival )

archival.job.template

;;

contraction )

contraction.job.template

;;
esac

############################################################
